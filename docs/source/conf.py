#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# SciMeth documentation build configuration file, created by
# sphinx-quickstart on Sat Mar 21 21:07:10 2020.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
import os
import sys
#sys.path.insert(0, os.path.abspath('.'))
#sys.path.insert(0, os.path.abspath('.\src'))
sys.path.insert(0, os.path.abspath('..\..'))
sys.path.insert(0, os.path.abspath('..\..\src'))
#sys.path.insert(0, os.path.abspath('..\..\src\\app')) #Watch out! \a is a escape character!
sys.path.insert(0, os.path.abspath('..\..\src\scimeth'))


# -- General configuration ------------------------------------------------

# Override autodoc default alphabetical ordering for members, to one that
# groups by their type, i.e. if they are methods, or attributes/properties, etc.
# Sort members by type
#autodoc_member_order = 'alphabetical' #default
#autodoc_member_order = 'groupwise' #By type, e.g. groups methods (first) and attributes (second)
# autodoc_member_order = 'bysource' #In the same order as they appear in the code.

# #Document __init__ , __str__ , etc
# autodoc_default_flags = ['members', 'private-members', 'special-members',
                         # #'undoc-members',
                         # 'show-inheritance']

# def autodoc_skip_member(app, what, name, obj, skip, options):
    # exclusions = ('__weakref__',  # special-members
                  # # undoc-members
                  # '__delattr__', '__dir__', '__dict__', '__doc__',
                  # '__eq__',  
                  # '__format__',  
                  # '__ge__', '__getattribute__','__gt__',               
                  # '__hash__',  
                  # '__init_subclass__',  
                  # '__le__', '__lt__',
                  # '__module__',  
                  # '__ne__', '__new__',
                  # '__reduce__', '__reduce_ex__', '__repr__',
                  # '__setattr__', '__sizeof__', '__subclasshook__',
                  
                  # )
    # exclude = name in exclusions
    # return skip or exclude

# def setup(app):
    # app.connect('autodoc-skip-member', autodoc_skip_member)

autodoc_default_options = {
    'members': True,
    'private-members': True,
    'undoc-members': False,
    'show-inheritance': True,
    'no-inherited-members': True,
    'member-order': 'bysource',
    'special-members': '__init__',
    'exclude-members': '__weakref__',
}


# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = ['sphinx.ext.autodoc',
    'sphinx.ext.doctest',
    'sphinx.ext.intersphinx',
    #'numpydoc',
    #'sphinx.ext.autosummary',
    'sphinx.ext.todo',
    'sphinx.ext.coverage',
    'sphinx.ext.mathjax',
    'sphinx.ext.ifconfig',
    'sphinx.ext.viewcode',
    'sphinx.ext.graphviz',
    'sphinx.ext.inheritance_diagram',
    'sphinx.ext.githubpages']

# extensions += [
    # 'matplotlib.sphinxext.only_directives',
    # 'matplotlib.sphinxext.plot_directive',
    # 'matplotlib.sphinxext.ipython_directive',
    # 'matplotlib.sphinxext.ipython_console_highlighting']

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = {
    '.rst': 'restructuredtext',
    '.md': 'markdown',
}

#Use sphinx.ext.autosummary instead of sphinx-apidoc
autosummary_generate = False
autosummary_imported_members = False

#Show authors; Controls whether codeauthor and sectionauthor directives produce output
show_authors = False

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = 'SciMeth'
copyright = '2020, Felipe Orihuela-Espina'
author = 'Felipe Orihuela-Espina'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = '0.1'
# The full version, including alpha/beta/rc tags.
release = '0.1'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
#html_theme = 'alabaster'
html_theme = 'sphinxdoc'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
#html_static_path = ['_static']
html_static_path = []

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# This is required for the alabaster theme
# refs: http://alabaster.readthedocs.io/en/latest/installation.html#sidebars
# html_sidebars = {
    # '**': [
        # 'relations.html',  # needs 'show_related': True theme option to display
        # 'searchbox.html',
    # ]
# }


# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'SciMethdoc'


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'SciMeth.tex', 'SciMeth Documentation',
     'Felipe Orihuela-Espina', 'manual'),
]


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'scimeth', 'SciMeth Documentation',
     [author], 1)
]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'SciMeth', 'SciMeth Documentation',
     author, 'SciMeth', 'One line description of project.',
     'Miscellaneous'),
]



# -- Options for Epub output ----------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project
epub_author = author
epub_publisher = author
epub_copyright = copyright

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
epub_exclude_files = ['search.html']



# Example configuration for intersphinx: refer to the Python standard library.
intersphinx_mapping = {'https://docs.python.org/': None}
